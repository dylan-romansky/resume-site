Develop frontend in Angular instead of using Flask for everything
-Decide what other pages I might want as part of my site
-https://auth0.com/blog/using-python-flask-and-angular-to-build-modern-apps-part-1/
-https://getbootstrap.com/
-Migrate from strings to dates for start and end dates

Switch to pipenv for dependency management
-https://pipenv.pypa.io/en/latest/

Automate cockroachdb initialization
-Cockroach needs client/server keys to authenticate when secure
-Check how cockroach uses the --join flag
-See if sqlalchemy can handle table creation as needed
--https://www.tutorialspoint.com/sqlalchemy/sqlalchemy_core_creating_table.htm
-See if cockroachdb wants to be single-node if I'm containerizing everything

Write all secrets in a file called .env and have it read from those ?

Migrate from docker-compose.yml to kubernetes manifest
-Look at load balancers
--Due to its order of operations, the PostgreSQL wire protocol's
  implementation of TLS is not compatible with SNI-based routing
  in the Kubernetes ingress controller. Instead, use a TCP load
  balancer for CockroachDB that is not shared with other services.
-Due to cockroachdb's tendency to kill nodes that are out of sync
 by 500ms+, sync all nodes to time.google.com
-Do I need to attach a cockroachdb instance to every instance of
 my frontend or is it enough to have a set of cockroachdb pods
 and point my backend pods to the cockroachdb pods
-https://docs.docker.com/get-started/kube-deploy/

Integrate into Terraform for scaling purposes

Set up Jenkins, Github Actions, or similar to create my CI/CD pipeline

Look at how Graphana, Prometheus, and similar are used to monitor site health

Buy domain name
-https://www.top10.com/hosting/domainhosting-comparison?utm_source=google&kw=domain%20name%20cost&c=494406477299&t=search&p=&m=e&adpos=&dev=c&devmod=&mobval=0&network=g&campaignid=11753191632&groupid=118432370873&targetid=kwd-1014575426&interest=&physical=9028880&feedid=&a=1113&ts=&topic=&test=&clicktype=&gclid=Cj0KCQiA0oagBhDHARIsAI-Bbgd2JEeTW1lmh14OzGtlN-a0pfSmPrErG7rsggkCOw0sPKCZkojSPxYaAmDuEALw_wcB

possible misc links:
https://pythonhosted.org/Flask-Mail/

https://flask-login.readthedocs.io/en/latest/

Rework file structure
-split classes, config, backend into their own files

Make the Dockerfile not hideous

Possibly consider a different server for deployment to clusters
-https://github.com/tiangolo/uwsgi-nginx-flask-docker

Look at app-swapping with NGINX
-https://uwsgi-docs.readthedocs.io/en/latest/Nginx.html
